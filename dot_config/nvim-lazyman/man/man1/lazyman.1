.\" Automatically generated by Pandoc 2.19.2
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "LAZYMAN" "1" "March 13, 2023" "lazyman 2.1.8" "User Manual"
.hy
.SH LAZYMAN
.SS NAME
.PP
lazyman - install, initialize, manage, and explore multiple Neovim
configurations
.SS SYNOPSIS
.PP
lazyman [-4] [-9] [-A] [-a] [-B] [-b branch] [-c] [-d] [-E config] [-e]
[-f path] [-F menu] [-g] [-i group] [-j] [-k] [-l] [-m] [-M] [-s] [-S]
[-v] [-n] [-o] [-O name] [-p] [-P] [-q] [-Q] [-h] [-H] [-I] [-J] [-L
lang] [-rR] [-C url] [-D subdir] [-N nvimdir] [-G] [-tT] [-U] [-V url]
[-w conf] [-W] [-x conf] [-X] [-y] [-Y] [-z] [-Z] [-K conf] [-u]
[health] [info] [init] [install [bob]] [open] [remove] [search] [status]
[usage]
.PP
Visit the Lazyman website (https://lazyman.dev) for more info.
.SS FEATURES
.IP \[bu] 2
\f[V]lazyman\f[R] command to easily install, initialize, manage, and
explore multiple Neovim configurations
.IP \[bu] 2
support for \f[V]Lazy\f[R], \f[V]Packer\f[R], and \f[V]vim-plug\f[R]
plugin managers (\f[V]dein\f[R] for \f[V]SpaceVim\f[R] only)
.IP \[bu] 2
open, install, remove, get info, search plugins, all from the command
line or main menu
.IP \[bu] 2
automated installation of dependencies, tools, language servers, and
Neovim 0.9+
.IP \[bu] 2
install and manage the \f[V]Bob\f[R] neovim version manager via a menu
interface
.IP \[bu] 2
richly configured \f[V]nvim-Lazyman\f[R] Neovim configuration
.IP \[bu] 2
interactive menu interface for ease of management
.RS 2
.IP \[bu] 2
manage the \f[V]nvim-Lazyman\f[R], \f[V]nvim-LazyIde\f[R], and
\f[V]nvim-Webdev\f[R] configs via menus
.IP \[bu] 2
perform health checks and generate a status report via menus
.RE
.IP \[bu] 2
over 100 supported Neovim configurations out of the box, additional
custom configs
.IP \[bu] 2
vimdoc help for \f[V]Lazyman\f[R] with \f[V]:h Lazyman\f[R] or
\f[V],hl\f[R]
.IP \[bu] 2
convenience shell functions and aliases with fuzzy search and selection
.RS 2
.IP \[bu] 2
\f[V]nvims\f[R] and \f[V]neovides\f[R] shell functions to fuzzy search,
select, and open Neovim configs
.IP \[bu] 2
enhanced \f[V]less\f[R] command alias
.IP \[bu] 2
enhanced \f[V]ls\f[R] command alias
.IP \[bu] 2
\f[V]tree\f[R] alias to display a tree view of files and folders
.IP \[bu] 2
\f[V]tldrf\f[R] alias to fuzzy search, select, and preview cheat sheets
.RE
.PP
See the Lazyman website Features section (https://lazyman.dev/features)
for additional information on Lazyman features.
.SS DESCRIPTION
.PP
The \f[V]lazyman\f[R] command can be used to install, initialize, and
manage multiple Neovim configurations.
Neovim configurations are installed and initialized in separate
subdirectories of \f[V]\[ti]/.config/\f[R] with associated separate
subdirectories in \f[V]\[ti]/.local/share/\f[R],
\f[V]\[ti]/.local/state/\f[R], and \f[V]\[ti]/.cache/\f[R].
.PP
Note that a full installation and initialization of all supported Neovim
configurations, plugins, language servers, formatters, linters, and
tools will consume over 20GB of disk space.
.PP
The \f[V]lazyman\f[R] Neovim configuration is installed as
\f[V]\[ti]/.config/nvim-Lazyman\f[R] and the \f[V]lazyman\f[R] command
is installed as \f[V]\[ti]/.local/bin/lazyman\f[R].
.PP
The Neovim configuration used by the \f[V]nvim\f[R] command is
determined by the \f[V]NVIM_APPNAME\f[R] environment variable (Neovim
0.9 and later only).
Set the \f[V]NVIM_APPNAME\f[R] environment variable in the shell
initialization file (typically \f[V]\[ti]/.bashrc\f[R] or
\f[V]\[ti]/.zshrc\f[R]) by using the \f[V]export\f[R] shell builtin:
.IP
.nf
\f[C]
export NVIM_APPNAME=\[dq]<nvimdir>\[dq]
\f[R]
.fi
.PP
where \f[V]<nvimdir>\f[R] is the subdirectory in
\f[V]\[ti]/.config/\f[R] that holds the desired Neovim configuration.
For example, to use the \f[V]LazyVim\f[R] Neovim configuration in
\f[V]\[ti]/.config/nvim-LazyVim/\f[R] the export command would be:
.IP
.nf
\f[C]
export NVIM_APPNAME=\[dq]nvim-LazyVim\[dq]
\f[R]
.fi
.PP
In addition to exporting NVIM_APPNAME in your shell initialization file,
you may wish to create aliases to execute with the various Neovim
configurations you have installed.
For example, aliases could be created to use Neovim configurations
installed in \f[V]\[ti]/.config/nvim-LazyVim\f[R] and
\f[V]\[ti]/.config/nvim-LunarVim\f[R] as follows:
.IP
.nf
\f[C]
alias nvim-lazy=\[dq]NVIM_APPNAME=nvim-LazyVim nvim\[dq]
alias nvim-lunar=\[dq]NVIM_APPNAME=nvim-LunarVim nvim\[dq]
\f[R]
.fi
.PP
After sourcing these aliases in your shell, to invoke Neovim with the
LazyVim configuration run \f[V]nvim-lazy filename.py\f[R] and to invoke
Neovim with the LunarVim config run \f[V]nvim-lunar proposal.md\f[R].
.PP
The \f[V]lazyman\f[R] installation and configuration automatically
configures convenience aliases and shell functions for Lazyman installed
Neovim configurations.
It also creates an \f[V]nvims\f[R] shell function which dynamically
creates a fuzzy searchable menu of installed Neovim configurations and
launches Neovim with the selected Lazyman Neovim configuration.
.PP
See \f[V]\[ti]/.config/nvim-Lazyman/.lazymanrc\f[R].
.PP
Similarly, a \f[V]neovides\f[R] shell function can be used to select a
Neovim configuration for use with the Neovim GUI \f[V]neovide\f[R].
.PP
Both the \f[V]nvims\f[R] shell function and \f[V]neovides\f[R] shell
function accept command line arguments.
The \f[V]-R\f[R] flag indicates removal of the selected Neovim
configuration.
The \f[V]-C filter\f[R] option to \f[V]nvims\f[R] and \f[V]neovides\f[R]
specifies a filter string to match when generating the list of Neovim
configurations to search and select.
The \f[V]-I\f[R] flag indicates display the selected configuration
information document.
Additional command line arguments are described below.
.PP
The fuzzy searchable/selectable menu of Neovim configurations can also
be shown with the command \f[V]lazyman -S\f[R].
Note also that both the \f[V]nvims\f[R] shell function and the
\f[V]lazyman -S\f[R] command can accept additional filename arguments
which are then passed to Neovim.
For example, to edit \f[V]/tmp/foo.lua\f[R] with a Neovim configuration
selected from the \f[V]nvims\f[R] menu:
.IP
.nf
\f[C]
nvims /tmp/foo.lua
\f[R]
.fi
.PP
Execute \f[V]nvims\f[R] directly at the shell prompt or by using the
convenience key binding \f[V]ctrl-n\f[R].
.PP
Similarly, if \f[V]neovide\f[R] is found in the execution PATH then a
fuzzy selectable menu is provided with the \f[V]neovides\f[R] shell
function and convenience key binding of \f[V]ctrl-N\f[R] to bring up
that menu.
.PP
The \f[V].lazymanrc\f[R] file also creates aliases for \f[V]ls\f[R],
\f[V]less\f[R], and others including a \f[V]tldrf\f[R] alias that allows
fuzzy searching and selecting from the list of cheatsheets supported by
\f[V]tldr\f[R].
Try out the \f[V]tldrf\f[R] command to quickly and easily display
documentation for thousands of commands.
.PP
Another alternative to setting \f[V]NVIM_APPNAME\f[R] in the environment
or with an alias is to use the \f[V]lazyman\f[R] command to specify
which Neovim configuration to use with this invocation.
This is done using the \f[V]-E config\f[R] option to \f[V]lazyman\f[R].
When invoking \f[V]lazyman\f[R] with the \f[V]-E config\f[R] argument,
the Neovim configuration can be specified by setting \f[V]config\f[R] to
one of \f[V]astronvim\f[R], \f[V]ecovim\f[R], \f[V]kickstart\f[R],
\f[V]lazyman\f[R], \f[V]lazyvim\f[R], \f[V]lunarvim\f[R],
\f[V]nvchad\f[R], \f[V]spacevim\f[R], or any Neovim configuration
directory in \f[V]\[ti]/.config\f[R].
For example, to edit the file \f[V]foo.lua\f[R] using the LazyVim Neovim
configuration:
.IP
.nf
\f[C]
lazyman -E lazyvim foo.lua
\f[R]
.fi
.PP
When invoked with the \f[V]-E config\f[R] option, \f[V]lazyman\f[R] sets
the \f[V]NVIM_APPNAME\f[R] environment variable to the specified
\f[V]config\f[R] and executes \f[V]nvim\f[R] with all following
arguments.
This is a pretty easy way to explore all the \f[V]lazyman\f[R] installed
and initialized Neovim configurations.
.SS Supported plugin managers
.PP
Lazyman currently supports the following Neovim plugin managers:
.IP \[bu] 2
Lazy (https://github.com/folke/lazy.nvim) (lazy.nvim)
.IP \[bu] 2
Packer (https://github.com/wbthomason/packer.nvim) (packer.nvim)
.IP \[bu] 2
Plug (https://github.com/junegunn/vim-plug) (vim-plug)
.PP
The SpaceVim bundled plugin manager is also supported.
.PP
Neovim configurations using other plugin managers will likely fail to
cleanly install and initialize using \f[V]lazyman\f[R].
Support for additional plugin managers is not currently planned but if
you have a need for this feature open an issue.
.PP
To install and initialize a Neovim configuration that uses the
\f[B]Packer\f[R] plugin manager invoke \f[V]lazyman\f[R] with the
\f[V]-P\f[R] flag.
.PP
To install and initialize a Neovim configuration that uses the
\f[B]Plug\f[R] plugin manager invoke \f[V]lazyman\f[R] with the
\f[V]-p\f[R] flag.
.SS Lazyman menu system
.PP
The \f[V]lazyman\f[R] command, when invoked without arguments or with
the \f[V]-F menu\f[R] argument, presents an interactive menu.
The Lazyman menu system can be used to perform almost all of the
functions available from the command line.
Submenus are available to configure the Lazyman Neovim configuration as
well as the \f[V]Webdev\f[R] and \f[V]LazyIde\f[R] Neovim
configurations.
.PP
Use the Lazyman menu system to select and install/open/remove Neovim
configurations managed by Lazyman.
Enter a menu option number or keywords to select an option.
.PP
Keywords include: help, info, install, open, remove, search, update,
quit
.PP
All shortcuts have single key support:
.IP
.nf
\f[C]
  \[aq]h\[aq] = help, \[aq]I\[aq] = info, \[aq]i\[aq] = install, \[aq]o\[aq] = open, \[aq]q\[aq] = quit
  \[aq]r\[aq] = remove, \[aq]s\[aq] = search, \[aq]u\[aq] = update, \[aq]c\[aq] = Lazyman Config menu
\f[R]
.fi
.PP
In the fuzzy selection dialogs, enter a few letters to fuzzy select from
the options or use the \f[V]<Up-Arrow>\f[R] and \f[V]<Down-Arrow>\f[R]
keys to move through the options.
Press \f[V]<Enter>\f[R] to select the highlighted option.
.PP
Lazyman Neovim configurations are organized into categories.
Configurations can be individually installed/removed or all
configurations in a category can be acted on.
.PP
The main menu also provides options to install additional tools, enable
debug mode, install the \f[V]Bob\f[R] Neovim version manager, select the
Neovim version to use, toggle the user interface between
\f[V]Neovim\f[R] and \f[V]Neovide\f[R], perform a Neovim health check,
bring up the Lazyman Neovim Configuration menu, or generate a status
report.
In addition, an option exists to view the Lazyman manual.
.PP
The Lazyman Neovim configuration manager can also be used from the
command line.
.SS OPTIONS
.PP
The following command line options are available with the
\f[V]lazyman\f[R] command:
.PP
\f[V]-4\f[R] : indicates initialize as AstroNvim v4 (use in place of
\f[V]-J\f[R])
.PP
\f[V]-9\f[R] : indicates do not apply any patches to this configuration
.PP
\f[V]-A\f[R] : indicates install all supported Neovim configurations
.PP
\f[V]-a\f[R] : indicates install and initialize the the
\[aq]AstroNvimPlus\[aq] Neovim configuration
.PP
\f[V]-B\f[R] : indicates install and initialize all \[aq]Base\[aq]
Neovim configurations
.PP
\f[V]-b branch\f[R] : specifies an nvim-lazyman git branch to checkout
.PP
\f[V]-c\f[R] : indicates install and initialize the \[aq]NvChad\[aq]
Neovim configuration
.PP
\f[V]-d\f[R] : indicates debug mode
.PP
\f[V]-D subdir\f[R] : specifies the subdirectory of the repository given
with \f[V]-C url\f[R] to retrieve
.PP
\f[V]-e\f[R] : indicates install and initialize the \[aq]Ecovim\[aq]
Neovim configuration
.PP
\f[V]-E \[aq]config\[aq]\f[R] : execute \[aq]nvim\[aq] with
\[aq]config\[aq] Neovim configuration where \[aq]config\[aq] can be one
of \[aq]lazyman\[aq], \[aq]astronvim\[aq], \[aq]ecovim\[aq],
\[aq]kickstart\[aq], \[aq]lazyvim\[aq], \[aq]lunarvim\[aq],
\[aq]magicvim\[aq], \[aq]spacevim\[aq], or any Neovim configuration
directory in \[aq]\[ti]/.config\[aq].
For example, \[aq]lazyman -E lazyvim foo.lua\[aq] would edit
\[aq]foo.lua\[aq] with the LazyVim config
.PP
\f[V]-f \[aq]path\[aq]\f[R] : fix treesitter \[aq]help\[aq] parser in
config file \[aq]path\[aq]
.PP
\f[V]-F \[aq]menu\[aq]\f[R] : indicates present the specified Lazyman
menu where \[aq]menu\[aq] can be one of \[aq]main\[aq], \[aq]conf\[aq],
\[aq]lsp\[aq], \[aq]format\[aq], \[aq]plugin\[aq], \[aq]lazyide\[aq], or
\[aq]webdev\[aq]
.PP
\f[V]-G\f[R] : indicates no plugin manager, initialize with
\f[V]:TSUpdate\f[R]
.PP
\f[V]-g\f[R] : indicates install and initialize the \[aq]Abstract\[aq]
Neovim configuration
.PP
\f[V]-h\f[R] : indicates use Homebrew rather than the native package
manager (Pacman always used on Arch Linux, Homebrew on macOS)
.PP
\f[V]-H\f[R] : indicates compile and install the nightly Neovim build
.PP
\f[V]-j\f[R] : indicates install and initialize the \[aq]BasicIde\[aq]
Neovim configuration
.PP
\f[V]-k\f[R] : indicates install and initialize the \[aq]Kickstart\[aq]
Neovim configuration
.PP
\f[V]-K conf\f[R] : indicates install and initialize the unsupported
in-development configuration \[aq]conf\[aq]
.PP
\f[V]-l\f[R] : indicates install and initialize the \[aq]LazyVim\[aq]
Neovim configuration
.PP
\f[V]-m\f[R] : indicates install and initialize \[aq]MagicVim\[aq]
Neovim configuration
.PP
\f[V]-M\f[R] : indicates install and initialize \[aq]Mini\[aq] Neovim
configuration
.PP
\f[V]-s\f[R] : indicates install and initialize the \[aq]SpaceVim\[aq]
Neovim configuration
.PP
\f[V]-S\f[R] : indicates show Neovim configuration fuzzy selector menu
.PP
\f[V]-t\f[R] : indicates list all installed Lazyman Neovim
configurations
.PP
\f[V]-T\f[R] : indicates list all uninstalled Lazyman Neovim
configurations
.PP
\f[V]-v\f[R] : indicates install and initialize the \[aq]LunarVim\[aq]
Neovim configuration
.PP
\f[V]-i group\f[R] : specifies a group to install/remove/update.
\[aq]group\[aq] can be one of: astronvim kickstart lazyvim lunarvim
nvchad packer plug
.PP
\f[V]-I\f[R] : indicates install all language servers and tools for
coding diagnostics
.PP
\f[V]-J\f[R] : indicates install indicated repo as an AstroNvim v3
custom configuration
.PP
\f[V]-L lang\f[R] : indicates install the \f[V]lang\f[R] Language
configuration where \[aq]lang\[aq] can be one of: All AlanVim Allaman
CatNvim Cpp Go Go2one Insis Knvim LaTeX LazyIde LunarIde LvimIde Magidc
Nv NV-IDE Orange Python Rust SaleVim Shuvro Webdev
.PP
\f[V]-n\f[R] : indicates dry run, don\[aq]t actually do anything, just
printf\[aq]s
.PP
\f[V]-o\f[R] : indicates input required during initialization
.PP
\f[V]-O name\f[R] : indicates set Lazyman configuration to namespace
\[aq]name\[aq] where \[aq]name\[aq] can be one of \f[V]ecovim\f[R],
\f[V]free\f[R], or \[ga]onno
.PP
\f[V]-P\f[R] : indicates use Packer rather than Lazy to initialize
.PP
\f[V]-p\f[R] : indicates use Plug rather than Lazy to initialize
.PP
\f[V]-q\f[R] : indicates quiet install
.PP
\f[V]-Q\f[R] : indicates exit after performing specified action(s)
.PP
\f[V]-r\f[R] : indicates remove the previously installed configuration
.PP
\f[V]-R\f[R] : indicates remove previously installed configuration and
backups
.PP
\f[V]-C url\f[R] : specifies a URL to a Neovim configuration git
repository
.PP
\f[V]-N nvimdir\f[R] : specifies the folder name to use for the config
given by -C
.PP
\f[V]-U\f[R] : indicates update an existing configuration
.PP
\f[V]-V url\f[R] : specifies an NvChad user configuration git repository
.PP
\f[V]-w conf\f[R] : indicates install and initialize Personal
\[aq]conf\[aq] configuration.
\[aq]conf\[aq] can be one of: All Adib Artur Beethoven Brain Charles
Craftzdog Dillon Elianiva Elijah Enrique Kristijan Heiker J4de Josean
JustinNvim Kodo LamarVim Lukas LvimAdib Maddison Metis Mini ONNO OnMyWay
Optixal Orhun Primeagen Rafi RNvim Roiz Simple Slydragonn Spider Traap
Wuelner xero Xiao
.PP
\f[V]-W\f[R] : indicates install and initialize all \[aq]Personal\[aq]
Neovim configurations
.PP
\f[V]-x conf\f[R] : indicates install and initialize nvim-starter
\[aq]conf\[aq] configuration.
\[aq]conf\[aq] can be one of: All 2k AstroNvimStart Barebones Basic
CodeArt Cosmic Ember Fennel HardHacker JustinOhMy Kabin Kickstart Micah
Normal NvPak Modern pde Rohit Scratch SingleFile BasicLsp BasicMason
Extralight LspCmp Minimal StartBase Opinion StartLsp StartMason Modular
.PP
\f[V]-X\f[R] : indicates install and initialize all \[aq]Starter\[aq]
Neovim configurations
.PP
\f[V]-y\f[R] : indicates do not prompt, answer \[aq]yes\[aq] to any
prompt
.PP
\f[V]-Y\f[R] : indicates use the following arguments as
\[aq]name\[aq]/\[aq]value\[aq] to set Lazyman config.
For example: \f[V]lazyman -Y theme kanagawa\f[R].
If the \[aq]name\[aq] argument is \[aq]get\[aq] then the current value
is returned
.PP
\f[V]-z\f[R] : indicates do not run nvim after initialization
.PP
\f[V]-Z\f[R] : indicates do not install Homebrew, Neovim, or any other
tools during initialization
.PP
\f[V]-u\f[R] : displays this usage message and exits
.PP
\f[V]health\f[R] : generate and display a health check for a
configuration
.PP
\f[V]info\f[R] : open an information page for a configuration in the
default browser
.PP
\f[V]init\f[R] : initialize specified Neovim configuration and exit
.PP
\f[V]install\f[R] : fuzzy search and select configuration to install
.PP
\f[V]install bob\f[R] : install the Bob Neovim version manager
.PP
\f[V]open\f[R] : fuzzy search and select configuration to open
.PP
\f[V]remove\f[R] : fuzzy search and select configuration to remove
.PP
\f[V]search\f[R] : fuzzy search and select configurations for a plugin
.PP
\f[V]status\f[R] : displays a brief status report and exits
.PP
\f[V]usage\f[R] : displays a usage message and exits
.PP
Commands act on \f[V]NVIM_APPNAME\f[R], override with \[aq]-N
nvimdir\[aq] or \[aq]-A\[aq]
.PP
Without arguments lazyman installs and initializes nvim-Lazyman or, if
initialized presents an interactive menu system.
.PP
See the Lazyman website Usage section (https://lazyman.dev/usage) for
additional information on Lazyman usage.
.SS EXAMPLES
.PP
\f[V]$HOME/.config/nvim-Lazyman/lazyman.sh\f[R] : initializes the
\f[V]Lazyman\f[R] Neovim configuration in
\f[V]$HOME/.config/nvim-Lazyman/\f[R]
.PP
\f[V]lazyman\f[R] : presents an interactive menu interface
.PP
\f[V]lazyman install\f[R] : fuzzy search and select a configuration to
install and initialize
.PP
\f[V]lazyman open\f[R] : fuzzy search and select an initialized
configuration to open
.PP
\f[V]lazyman -a\f[R] : installs and initializes the
\f[V]AstroNvimPlus\f[R] Neovim configuration in
\f[V]$HOME/.config/nvim-AstroNvimPlus/\f[R]
.PP
\f[V]lazyman -c\f[R] : installs and initializes the \f[V]NvChad\f[R]
Neovim configuration in \f[V]$HOME/.config/nvim-NvChad/\f[R]
.PP
\f[V]lazyman -l\f[R] : installs and initializes the \f[V]LazyVim\f[R]
Neovim configuration in \f[V]$HOME/.config/nvim-LazyVim/\f[R]
.PP
\f[V]lazyman -A\f[R] : installs and initializes all supported Neovim
configurations
.PP
\f[V]lazyman -I\f[R] : installs language servers and tools for coding
diagnostics
.PP
\f[V]lazyman -U -N nvim-LazyVim\f[R] : updates the \f[V]LazyVim\f[R]
Neovim configuration in \f[V]$HOME/.config/nvim-LazyVim/\f[R]
.PP
\f[V]lazyman -A -U\f[R] : updates all installed supported Neovim
configurations
.PP
\f[V]lazyman -P -C https://github.com/Abstract-IDE/Abstract -N nvim-Abstract\f[R]
: installs and initializes the Packer based \[aq]Abstract\[aq] Neovim
configuration in \f[V]\[ti]/.config/nvim-Abstract\f[R]
.PP
\f[V]lazyman -R -N nvim-LazyVim\f[R] : removes the \f[V]LazyVim\f[R]
Neovim configuration in \f[V]$HOME/.config/nvim-LazyVim/\f[R], its data
files, cache, state, and all backups
.PP
Sometimes people place their Neovim configuration in a repository
subdirectory along with other configurations in a \f[V]dotfiles\f[R]
repo.
To retrieve only the Neovim configuration subdirectory in such a
repository, use the \f[V]-b branch\f[R] and \f[V]-D subdir\f[R]
arguments to \f[V]lazyman\f[R] along with \f[V]-C url\f[R] and
\f[V]-N nvimdir\f[R].
If no \f[V]-b branch\f[R] is provided then the default git branch is
assumed to be \f[V]master\f[R].
For example, to install and initialize the Neovim configuration hosted
at <https://github.com/alanRizzo/dot-files> in the subdirectory
\f[V]nvim\f[R] with default branch \f[V]main\f[R], place it in
\f[V]\[ti]/.config/nvim-AlanVim\f[R], and initialize it with Packer:
.IP
.nf
\f[C]
lazyman -b main -C https://github.com/alanRizzo/dot-files -D nvim -N nvim-AlanVim -P
\f[R]
.fi
.SS CONFIGURATION
.PP
In addition to the \f[V]lazyman\f[R] command, the Lazyman distribution
includes a richly preconfigured Neovim configuration in
\f[V]\[ti]/.config/nvim-Lazyman\f[R].
The Lazyman Neovim configuration includes a top-level configuration
file, \f[V]\[ti]/.config/nvim-Lazyman/lua/configuration.lua\f[R].
This file can be use to enable, disable, and configure
\f[V]nvim-Lazyman\f[R] components.
For example, here is where you would configure whether
\f[V]neo-tree\f[R] or \f[V]nvim-tree\f[R] is enabled as a file explorer.
Or, disable the \f[V]tabline\f[R], disable the \f[V]statusline\f[R], set
the \f[V]colorscheme\f[R], \f[V]theme\f[R], and theme style.
The \f[V]configuration.lua\f[R] file is intended to serve as a quick and
easy way to re-configure the \f[V]nvim-Lazyman\f[R] Neovim configuration
but you can still dig down into the \f[V]options.lua\f[R],
\f[V]keymaps.lua\f[R], \f[V]autocmds.lua\f[R] and more.
.SS Configuration sections
.PP
The \f[V]lua/configuration.lua\f[R] configuration file contains the
following sections with settings briefly described here:
.SS Namespace selection
.PP
The \f[V]Lazyman\f[R] Neovim configuration contains three separate and
distinct configurations.
The setting \f[V]conf.namespace\f[R] in \f[V]lua/configuration.lua\f[R]
controls which configuration is active.
The supported values for \f[V]conf.namespace\f[R] are \f[V]ecovim\f[R],
\f[V]free\f[R], and \f[V]onno\f[R].
The \f[V]free\f[R] namespace is the same configuration used in previous
releases of \f[V]Lazyman\f[R].
The \f[V]onno\f[R] namespace is based on the \f[V]ONNO\f[R]
configuration with modifications and enhancements to integrate this
config with \f[V]lazyman\f[R].
The \f[V]ecovim\f[R] namespace is based on the \f[V]Ecovim\f[R]
configuration with modifications and enhancements to integrate this
config with \f[V]lazyman\f[R] along with some useless eye candy.
.PP
To use the \f[V]ecovim\f[R] namespace, set:
.IP
.nf
\f[C]
conf.namespace = \[dq]ecovim\[dq]
\f[R]
.fi
.PP
To use the \f[V]free\f[R] namespace, set:
.IP
.nf
\f[C]
conf.namespace = \[dq]free\[dq]
\f[R]
.fi
.PP
To use the \f[V]onno\f[R] namespace, set:
.IP
.nf
\f[C]
conf.namespace = \[dq]onno\[dq]
\f[R]
.fi
.PP
This setting is configurable via the \f[V]lazyman\f[R] menu system, as
are most of the \f[V]Lazyman\f[R] configuration settings.
.SS Theme configuration
.PP
The \f[V]nvim-Lazyman\f[R] Neovim configuration includes pre-configured
support for several themes including support for statusline and tabline
theme coordination.
The active theme and colorscheme is selected in
\f[V]configuration.lua\f[R] by setting \f[V]conf.theme\f[R].
For themes that support different styles, the theme style is selected by
setting \f[V]conf.theme_style\f[R].
Theme transparency can be enabled with
\f[V]conf.enable_transparent\f[R].
For example, to use the \f[V]kanagawa\f[R] theme with \f[V]dragon\f[R]
style and transparency disabled, set:
.IP
.nf
\f[C]
conf.theme = \[dq]kanagawa\[dq]
conf.theme_style = \[dq]dragon\[dq]
conf.enable_transparent = false
\f[R]
.fi
.SS Supported themes
.IP \[bu] 2
catppuccin (https://github.com/catppuccin/nvim.git)
.IP \[bu] 2
dracula (https://github.com/Mofiqul/dracula.nvim)
.IP \[bu] 2
everforest (https://github.com/neanias/everforest-nvim.git)
.IP \[bu] 2
kanagawa (https://github.com/rebelot/kanagawa.nvim.git)
.IP \[bu] 2
nightfox (https://github.com/EdenEast/nightfox.nvim.git)
.IP \[bu] 2
monokai-pro (https://github.com/loctvl842/monokai-pro.nvim)
.IP \[bu] 2
onedarkpro (https://github.com/olimorris/onedarkpro.nvim.git)
.IP \[bu] 2
tokyonight (https://github.com/folke/tokyonight.nvim.git)
.IP \[bu] 2
tundra (https://github.com/sam4llis/nvim-tundra.git)
.PP
A configuration file for each theme is in \f[V]lua/themes/\f[R] and
lualine theme configuration for each theme and its styles in
\f[V]lua/themes/lualine\f[R].
.PP
Use \f[V]<F8>\f[R] to step through themes.
.PP
Available styles are:
.IP \[bu] 2
kanagawa
.RS 2
.IP \[bu] 2
wave
.IP \[bu] 2
dragon
.IP \[bu] 2
lotus
.RE
.IP \[bu] 2
tokyonight
.RS 2
.IP \[bu] 2
night
.IP \[bu] 2
storm
.IP \[bu] 2
day
.IP \[bu] 2
moon
.RE
.IP \[bu] 2
onedarkpro
.RS 2
.IP \[bu] 2
onedark
.IP \[bu] 2
onelight
.IP \[bu] 2
onedark_vivid
.IP \[bu] 2
onedark_dark
.RE
.IP \[bu] 2
catppuccin
.RS 2
.IP \[bu] 2
latte
.IP \[bu] 2
frappe
.IP \[bu] 2
macchiato
.IP \[bu] 2
mocha
.IP \[bu] 2
custom
.RE
.IP \[bu] 2
dracula
.RS 2
.IP \[bu] 2
blood
.IP \[bu] 2
magic
.IP \[bu] 2
soft
.IP \[bu] 2
default
.RE
.IP \[bu] 2
nightfox
.RS 2
.IP \[bu] 2
carbonfox
.IP \[bu] 2
dawnfox
.IP \[bu] 2
dayfox
.IP \[bu] 2
duskfox
.IP \[bu] 2
nightfox
.IP \[bu] 2
nordfox
.IP \[bu] 2
terafox
.RE
.IP \[bu] 2
monokai-pro
.RS 2
.IP \[bu] 2
classic
.IP \[bu] 2
octagon
.IP \[bu] 2
pro
.IP \[bu] 2
machine
.IP \[bu] 2
ristretto
.IP \[bu] 2
spectrum
.RE
.SS Plugin configuration
.PP
Several Neovim plugins in the \f[V]nvim-Lazyman\f[R] configuration can
be optionally installed or replaced by another plugin with similar
functionality.
The plugins that are configurable in this way in
\f[V]configuration.lua\f[R] are briefly described below along with their
default settings:
.IP \[bu] 2
Neovim session manager to use, either persistence or possession
.RS 2
.IP \[bu] 2
\f[V]conf.session_manager = \[dq]possession\[dq]\f[R]
.RE
.IP \[bu] 2
Enable display of ascii art
.RS 2
.IP \[bu] 2
\f[V]conf.enable_asciiart = false\f[R]
.RE
.IP \[bu] 2
Delete buffers and close files without closing your windows
.RS 2
.IP \[bu] 2
\f[V]conf.enable_bbye = true\f[R]
.RE
.IP \[bu] 2
Enable display of custom cheatsheets
.RS 2
.IP \[bu] 2
\f[V]conf.enable_cheatsheet = true\f[R]
.RE
.IP \[bu] 2
Enable coding plugins for diagnostics, debugging, and language sservers
.RS 2
.IP \[bu] 2
\f[V]conf.enable_coding = true\f[R]
.RE
.IP \[bu] 2
Enable compile plugin to compile and run current file
.RS 2
.IP \[bu] 2
\f[V]conf.enable_compile = false\f[R]
.RE
.IP \[bu] 2
If coding is enabled, enable Github Copilot
.RS 2
.IP \[bu] 2
\f[V]conf.enable_copilot = false\f[R]
.RE
.IP \[bu] 2
If coding is enabled, enable Neoai,
<https://github.com/Bryley/neoai.nvim>
.RS 2
.IP \[bu] 2
\f[V]conf.enable_neoai = false\f[R]
.RE
.IP \[bu] 2
Enable dressing plugin for improved default vim.ui interfaces
.RS 2
.IP \[bu] 2
\f[V]conf.enable_dressing = true\f[R]
.RE
.IP \[bu] 2
Enable easy motions, can be one of \[dq]hop\[dq], \[dq]leap\[dq], or
\[dq]none\[dq]
.RS 2
.IP \[bu] 2
\f[V]conf.enable_motion = \[dq]leap\[dq]\f[R]
.RE
.IP \[bu] 2
Enable note making using Markdown preview and Obsidian plugins
.RS 2
.IP \[bu] 2
\f[V]conf.enable_notes = true\f[R]
.RE
.IP \[bu] 2
Enable renamer plugin for VS Code-like renaming UI
.RS 2
.IP \[bu] 2
\f[V]conf.enable_renamer = true\f[R]
.RE
.IP \[bu] 2
Enable ranger in a floating window
.RS 2
.IP \[bu] 2
\f[V]conf.enable_ranger_float = true\f[R]
.RE
.IP \[bu] 2
Enable multiple cursors
.RS 2
.IP \[bu] 2
\f[V]conf.enable_multi_cursor = true\f[R]
.RE
.IP \[bu] 2
Neo-tree or nvim-tree, false will enable nvim-tree
.RS 2
.IP \[bu] 2
\f[V]conf.enable_neotree = true\f[R]
.RE
.IP \[bu] 2
Replace the UI for messages, cmdline and the popup menu
.RS 2
.IP \[bu] 2
\f[V]conf.enable_noice = true\f[R]
.RE
.IP \[bu] 2
Enable ChatGPT (set \f[V]OPENAI_API_KEY\f[R] environment variable)
.RS 2
.IP \[bu] 2
\f[V]conf.enable_chatgpt = false\f[R]
.RE
.IP \[bu] 2
Enable the wilder plugin
.RS 2
.IP \[bu] 2
\f[V]conf.enable_wilder = false\f[R]
.RE
.IP \[bu] 2
The statusline (lualine) and tabline can each be enabled or disabled
.RS 2
.IP \[bu] 2
\f[V]conf.enable_statusline = true\f[R]
.IP \[bu] 2
\f[V]conf.enable_tabline = true\f[R]
.RE
.IP \[bu] 2
The winbar with navic location can be one of barbecue, standard, or none
.RS 2
.IP \[bu] 2
\f[V]conf.enable_winbar = \[dq]standard\[dq]\f[R]
.RE
.IP \[bu] 2
Enable the rebelot/terminal.nvim terminal plugin
.RS 2
.IP \[bu] 2
\f[V]conf.enable_terminal = true\f[R]
.RE
.IP \[bu] 2
Enable playing games inside Neovim!
.RS 2
.IP \[bu] 2
\f[V]conf.enable_games = true\f[R]
.RE
.IP \[bu] 2
Enable the Alpha dashboard
.RS 2
.IP \[bu] 2
\f[V]conf.dashboard = \[dq]alpha\[dq]\f[R]
.RE
.IP \[bu] 2
Enable the Neovim bookmarks plugin
(<https://github.com/ldelossa/nvim-ide>)
.RS 2
.IP \[bu] 2
\f[V]conf.enable_bookmarks = false\f[R]
.RE
.IP \[bu] 2
Enable the Neovim IDE plugin (<https://github.com/ldelossa/nvim-ide>)
.RS 2
.IP \[bu] 2
\f[V]conf.enable_ide = false\f[R]
.RE
.IP \[bu] 2
Enable Navigator
.RS 2
.IP \[bu] 2
\f[V]conf.enable_navigator = true\f[R]
.RE
.IP \[bu] 2
Enable Project manager
.RS 2
.IP \[bu] 2
\f[V]conf.enable_project = true\f[R]
.RE
.IP \[bu] 2
Enable smooth scrolling with the \f[V]neoscroll\f[R] plugin
.RS 2
.IP \[bu] 2
\f[V]conf.enable_smooth_scrolling = true\f[R]
.RE
.IP \[bu] 2
Enable window picker
.RS 2
.IP \[bu] 2
\f[V]conf.enable_picker = true\f[R]
.RE
.IP \[bu] 2
Show diagnostics, can be one of \[dq]none\[dq], \[dq]icons\[dq],
\[dq]popup\[dq].
Default is \[dq]popup\[dq]
.RS 2
.IP \[bu] 2
\f[V]conf.show_diagnostics = \[dq]icons\[dq]\f[R]
.RE
.IP \[bu] 2
Enable semantic highlighting
.RS 2
.IP \[bu] 2
\f[V]conf.enable_semantic_highlighting = true\f[R]
.RE
.IP \[bu] 2
Convert semantic highlights to treesitter highlights
.RS 2
.IP \[bu] 2
\f[V]conf.convert_semantic_highlighting = true\f[R]
.RE
.PP
Additional plugin configuration and options are available in
\f[V]configuration.lua\f[R].
.SS Lazyman Neovim Terminal
.PP
If \f[V]configuration.lua\f[R] has the Neovim Terminal enabled with
\f[V]conf.enable_terminal = true\f[R] then the \f[V]Lazyman\f[R] Neovim
configuration includes Neovim Terminal management via
terminal.nvim (https://github.com/rebelot/terminal.nvim).
This Neovim terminal is preconfigured for execution of the
\f[V]lazyman\f[R] command.
A shortcut key binding to execute \f[V]lazyman\f[R] in a Neovim terminal
has also been provided: (\f[V]<leader>lm\f[R]).
While in Neovim with the default \f[V]nvim-Lazyman\f[R] configuration,
pressing \f[V],lm\f[R] will execute the \f[V]lazyman\f[R] command in a
Neovim floating terminal window.
Alternately, executing the Neovim command \f[V]:Lazyman\f[R] will also
bring up the \f[V]lazyman\f[R] command in a Neovim terminal.
.PP
The Lazyman Neovim configuration includes an autocmd to automatically
enter insert mode when opening the Neovim Terminal.
This allows immediate input to the \f[V]lazyman\f[R] prompt.
While in the Neovim Terminal the normal Neovim mode, motion, and command
key bindings are in effect.
For example, to leave insert mode press \f[V]<ESC>\f[R], to re-enter
insert mode press \f[V]i\f[R] or \f[V]a\f[R].
.PP
If Asciiville (https://github.com/doctorfree/Asciiville) is installed,
pressing \f[V],A\f[R] or executing the \f[V]:Asciiville\f[R] Neovim
command will execute the \f[V]asciiville\f[R] command in a Neovim
floating terminal window.
.PP
If the \f[V]htop\f[R] command is available, \f[V]:Htop\f[R] will execute
the \f[V]htop\f[R] system monitor in a floating Neovim terminal window.
.PP
This preconfigured Neovim terminal capability is only available in the
\f[V]Lazyman\f[R] Neovim configuration and not in the other configs.
.SS Help
.PP
The Lazyman Neovim configuration provides \f[V]vimdoc\f[R] help for the
\f[V]lazyman\f[R] command, the \f[V]nvim-Lazyman\f[R] Neovim
configuration, the \f[V]nvims\f[R] shell function, and the configured
keymaps.
.PP
While in Neovim using the \f[V]nvim-Lazyman\f[R] configuration, view the
\f[V]vimdoc\f[R] help for the \f[V]lazyman\f[R] command and
configuration with the command \f[V]:help Lazyman\f[R], view
\f[V]vimdoc\f[R] help for \f[V]nvims\f[R] with \f[V]:help Nvims\f[R],
and the \f[V]vimdoc\f[R] help for the configured keymaps with the
command \f[V]:help Lazyman-Keymaps\f[R].
Shortcut key bindings for these help commands have been configured.
Use \f[V],hl\f[R], \f[V],hn\f[R], and \f[V],hk\f[R] to quickly access
the \f[V]vimdoc\f[R] help for \f[V]lazyman\f[R], \f[V]nvims\f[R], and
Lazyman keymaps.
.SS AUTHORS
.PP
Written by Ronald Record \f[V]github\[at]ronrecord.com\f[R]
.SS LICENSING
.PP
LAZYMAN is distributed under an Open Source license.
See the file LICENSE in the LAZYMAN source distribution for information
on terms & conditions for accessing and otherwise using LAZYMAN and for
a DISCLAIMER OF ALL WARRANTIES.
.SS BUGS
.PP
Submit bug reports online at:
.PP
<https://github.com/doctorfree/nvim-lazyman/issues>
.SS SEE ALSO
.PP
\f[B]nvims\f[R](1), \f[B]lazyman-keymaps\f[R](5)
.PP
Full documentation and sources at:
.PP
<https://github.com/doctorfree/nvim-lazyman>
